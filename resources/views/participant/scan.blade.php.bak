<x-app-layout>
    <x-slot name="header">
        <div class="flex items-center space-x-3" x-data="slideIn('down', 100)">
            <div class="bg-yellow-100 p-3 rounded-xl animate-pulse hover-glow">
                <svg class="w-8 h-8 md:w-10 md:h-10 lg:w-12 lg:h-12 text-yellow-600" fill="none" stroke="currentColor"
                    viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M3.75 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 013.75 9.375v-4.5zM3.75 14.625c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5a1.125 1.125 0 01-1.125-1.125v-4.5zM13.5 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0113.5 9.375v-4.5z">
                    </path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M6.75 6.75h.75v.75h-.75v-.75zM6.75 16.5h.75v.75h-.75v-.75zM16.5 6.75h.75v.75h-.75v-.75zM13.5 13.5h4.5v4.5h-4.5v-4.5z">
                    </path>
                </svg>
            </div>
            <div x-data="fadeIn(200)">
                <h2 class="font-bold text-2xl md:text-3xl lg:text-4xl text-gray-800 leading-tight flex items-center">
                    <span class="mr-2">ðŸ“±</span>
                    Scan QR Code Presensi
                </h2>
                <p class="text-gray-600 md:text-lg lg:text-xl mt-1">
                    Selamat datang, {{ Auth::user()->full_name ?? 'Peserta' }}! Arahkan kamera ke QR Code untuk
                    melakukan presensi.
                </p>
                @if (Auth::user()->role !== 'participant')
                    <div class="mt-2 p-3 bg-red-50 border border-red-200 rounded-lg" x-data="slideIn('up', 300)">
                        <p class="text-red-600 font-medium text-sm md:text-base lg:text-lg flex items-center">
                            <svg class="w-4 h-4 md:w-5 md:h-5 lg:w-6 lg:h-6 mr-2 flex-shrink-0" fill="none"
                                stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                            </svg>
                            Akses ditolak: Hanya peserta yang diizinkan menggunakan fitur scan QR code.
                        </p>
                    </div>
                @endif
            </div>
        </div>
    </x-slot>

    @push('styles')
        <style>
            #qr-reader {
                border: 3px dashed #f59e0b;
                max-width: 100%;
                margin: 0 auto;
            }

            #qr-reader video {
                border-radius: 0.75rem;
                max-width: 100%;
                height: auto;
            }

            .animate-fade-in {
                animation: fadeIn 0.6s ease-out;
            }

            @keyframes fadeIn {
                from {
                    opacity: 0;
                }

                to {
                    opacity: 1;
                }
            }

            .animate-slide-up {
                opacity: 0;
                transform: translateY(20px);
                transition: all 0.6s ease-out;
            }

            .pulse-scan {
                animation: pulse-scan 2s ease-in-out infinite;
            }

            @keyframes pulse-scan {
                0% {
                    transform: scale(1);
                    opacity: 1;
                }

                50% {
                    transform: scale(1.1);
                    opacity: 0.8;
                }

                100% {
                    transform: scale(1);
                    opacity: 1;
                }
            }

            .scanner-overlay {
                background: radial-gradient(circle, transparent 30%, rgba(0, 0, 0, 0.5) 70%);
            }

            @media (min-width: 768px) {
                #qr-reader {
                    border-width: 4px;
                    max-width: 90%;
                }
            }

            @media (min-width: 1024px) {
                #qr-reader {
                    border-width: 5px;
                    max-width: 80%;
                }
            }

            .hover-glow {
                transition: all 0.3s ease;
            }

            .hover-glow:hover {
                transform: scale(1.05);
                box-shadow: 0 0 15px rgba(245, 158, 11, 0.6);
            }

            .card-hover {
                transition: transform 0.3s ease, box-shadow 0.3s ease;
            }

            .card-hover:hover {
                transform: translateY(-5px);
                box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
            }
        </style>
    @endpush

    <div class="bg-gradient-to-br from-yellow-50 via-white to-yellow-100 min-h-screen">
        <div class="max-w-4xl mx-auto px-4 sm:px-6 py-6 sm:py-8 space-y-6 sm:space-y-8">

            <!-- Notifications -->
            @if (session('success'))
                <div class="animate-fade-in">
                    <div class="bg-green-50 border border-green-200 rounded-2xl p-3 sm:p-4 shadow-sm">
                        <div class="flex items-center">
                            <svg class="w-4 h-4 sm:w-5 sm:h-5 text-green-600 mr-2 sm:mr-3 flex-shrink-0" fill="none"
                                stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <p class="text-green-800 font-medium text-xs sm:text-sm md:text-base">
                                {{ session('success') }}</p>
                        </div>
                    </div>
                </div>
            @endif

            @if (session('error'))
                <div class="animate-fade-in">
                    <div class="bg-red-50 border border-red-200 rounded-2xl p-3 sm:p-4 shadow-sm">
                        <div class="flex items-center">
                            <svg class="w-4 h-4 sm:w-5 sm:h-5 text-red-600 mr-2 sm:mr-3 flex-shrink-0" fill="none"
                                stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                            </svg>
                            <p class="text-red-800 font-medium text-xs sm:text-sm md:text-base">{{ session('error') }}
                            </p>
                        </div>
                    </div>
                </div>
            @endif

            @if (session('warning'))
                <div class="animate-fade-in">
                    <div class="bg-yellow-50 border border-yellow-200 rounded-2xl p-3 sm:p-4 shadow-sm">
                        <div class="flex items-center">
                            <svg class="w-4 h-4 sm:w-5 sm:h-5 text-yellow-600 mr-2 sm:mr-3 flex-shrink-0" fill="none"
                                stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                            </svg>
                            <p class="text-yellow-800 font-medium text-xs sm:text-sm md:text-base">
                                {{ session('warning') }}</p>
                        </div>
                    </div>
                </div>
            @endif

            <!-- Main Scanner Section -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-4 sm:gap-6 lg:gap-8">

                <!-- Scanner Card - Takes 2 columns on large screens -->
                <div class="lg:col-span-2">
                    <div class="bg-white rounded-2xl shadow-xl border border-yellow-200 card-hover animate-slide-up">
                        <!-- Scanner Header -->
                        <div class="bg-gradient-to-r from-yellow-500 to-yellow-600 p-4 sm:p-6 rounded-t-2xl">
                            <div
                                class="flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0">
                                <div class="flex items-center space-x-3 sm:space-x-4">
                                    <div class="p-2 sm:p-3 bg-white bg-opacity-20 rounded-xl pulse-scan">
                                        <svg class="w-6 h-6 sm:w-7 sm:h-7 md:w-8 md:h-8 text-white" fill="none"
                                            stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z" />
                                        </svg>
                                    </div>
                                    <div>
                                        <h3 class="text-lg sm:text-xl font-bold text-white">QR Code Scanner</h3>
                                        <p class="text-yellow-100 text-xs sm:text-sm">Siap untuk memindai QR Code
                                            presensi</p>
                                    </div>
                                </div>
                                <div class="text-left sm:text-right">
                                    <div class="flex items-center space-x-2 text-white">
                                        <div class="w-2.5 h-2.5 sm:w-3 sm:h-3 bg-green-400 rounded-full animate-pulse">
                                        </div>
                                        <span class="font-medium text-xs sm:text-sm" id="scan-status">Scanner
                                            Aktif</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Scanner Body -->
                        <div class="p-4 sm:p-6">
                            <!-- Scanner Container with Enhanced Overlay -->
                            <div class="relative mb-6 flex justify-center">
                                <div id="qr-reader"
                                    class="rounded-xl overflow-hidden shadow-lg w-full md:max-w-md lg:max-w-lg"></div>

                                <!-- Enhanced Scanner Overlay -->
                                <div class="absolute inset-0 pointer-events-none scanner-overlay" id="scanner-overlay">
                                    <!-- Corner Indicators -->
                                    <div
                                        class="absolute top-6 left-6 w-6 h-6 md:w-8 md:h-8 border-l-3 md:border-l-4 border-t-3 md:border-t-4 border-yellow-400 rounded-tl-lg animate-pulse">
                                    </div>
                                    <div
                                        class="absolute top-6 right-6 w-6 h-6 md:w-8 md:h-8 border-r-3 md:border-r-4 border-t-3 md:border-t-4 border-yellow-400 rounded-tr-lg animate-pulse">
                                    </div>
                                    <div
                                        class="absolute bottom-6 left-6 w-6 h-6 md:w-8 md:h-8 border-l-3 md:border-l-4 border-b-3 md:border-b-4 border-yellow-400 rounded-bl-lg animate-pulse">
                                    </div>
                                    <div
                                        class="absolute bottom-6 right-6 w-6 h-6 md:w-8 md:h-8 border-r-3 md:border-r-4 border-b-3 md:border-b-4 border-yellow-400 rounded-br-lg animate-pulse">
                                    </div>
                                </div>
                            </div>

                            <!-- Results Area -->
                            <div id="qr-reader-results" class="min-h-[80px] flex items-center justify-center">
                                <div class="text-center w-full sm:max-w-md">
                                    <div
                                        class="p-3 sm:p-4 bg-gradient-to-br from-yellow-50 to-yellow-100 rounded-xl border border-yellow-200 inline-block sm:block mx-auto">
                                        <svg class="w-8 h-8 sm:w-10 sm:h-10 mx-auto mb-1 sm:mb-2 text-yellow-600"
                                            fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                                        </svg>
                                                    <p class="text-xs sm:text-sm font-medium text-yellow-800">Posisikan QR Code di
                                            dalam frame</p>
                                        <p class="text-xs text-yellow-600 mt-0.5 sm:mt-1">Scanner akan otomatis
                                            mendeteksi QR Code</p>
                                        <p class="text-xs text-gray-500 mt-2" id="browser-info"></p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Manual Input Fallback -->
                            <div class="mt-6 border-t border-gray-200 pt-6">
                                <div class="text-center">
                                    <h4 class="text-gray-700 font-medium mb-3">Jika kamera tidak berfungsi, masukkan kode acara secara manual:</h4>
                                    <form action="{{ route('scan.verify') }}" method="POST" class="inline-flex flex-col sm:flex-row sm:items-center space-y-3 sm:space-y-0 sm:space-x-3">
                                        @csrf
                                        <input type="text" name="event_code" placeholder="Masukkan kode acara" 
                                            class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500">
                                        <button type="submit" class="px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition-colors">
                                            Submit Kode
                                        </button>
                                    </form>
                                    
                                    <div class="mt-6 pt-4 border-t border-gray-200">
                                        <h4 class="text-gray-700 font-medium mb-3">Troubleshooting Kamera:</h4>
                                        <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-3 justify-center">
                                            <button id="test-camera-btn" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
                                                Tes Akses Kamera
                                            </button>
                                            <button id="reload-scanner-btn" class="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors">
                                                Reload Scanner
                                            </button>
                                        </div>
                                        <div id="camera-test-area" class="mt-4 hidden">
                                            <video id="camera-test-video" autoplay playsinline style="width: 100%; max-width: 320px; margin: 0 auto; border-radius: 8px;"></video>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Instructions and Status Sidebar -->
                <div class="space-y-6">

                    <!-- Quick Status Card -->
                    <div class="bg-white rounded-2xl shadow-xl border border-yellow-200 animate-slide-up">
                        <div class="p-4 sm:p-6">
                            <div class="flex items-center space-x-3 sm:space-x-4 mb-3 sm:mb-4">
                                <div class="p-2 sm:p-3 bg-green-100 rounded-xl">
                                    <svg class="w-5 h-5 sm:w-6 sm:h-6 text-green-600" fill="none"
                                        stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                </div>
                                <div>
                                    <h3 class="font-bold text-gray-900 text-sm sm:text-base">Status Scanner</h3>
                                    <p class="text-xs sm:text-sm text-gray-500">Real-time scanner info</p>
                                </div>
                            </div>

                            <div class="space-y-2 sm:space-y-3">
                                <div
                                    class="flex items-center justify-between p-2 sm:p-3 bg-green-50 rounded-lg border border-green-200">
                                    <span class="text-xs sm:text-sm font-medium text-green-800">Kamera</span>
                                    <div class="flex items-center space-x-2">
                                        <div class="w-1.5 h-1.5 sm:w-2 sm:h-2 bg-green-500 rounded-full animate-pulse">
                                        </div>
                                        <span class="text-xs text-green-600 font-semibold">Aktif</span>
                                    </div>
                                </div>
                                <div
                                    class="flex items-center justify-between p-2 sm:p-3 bg-yellow-50 rounded-lg border border-yellow-200">
                                    <span class="text-xs sm:text-sm font-medium text-yellow-800">QR Detection</span>
                                    <span class="text-xs text-yellow-600 font-semibold">Siap</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Instructions Card -->
                    <div class="bg-white rounded-2xl shadow-xl border border-yellow-200 animate-slide-up">
                        <div class="p-4 sm:p-6 border-b border-gray-100">
                            <div class="flex items-center space-x-3">
                                <div class="p-2 sm:p-3 bg-blue-100 rounded-xl">
                                    <svg class="w-5 h-5 sm:w-6 sm:h-6 text-blue-600" fill="none"
                                        stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                </div>
                                <div>
                                    <h3 class="font-bold text-gray-900 text-sm sm:text-base">Petunjuk Scan</h3>
                                    <p class="text-xs sm:text-sm text-gray-500">Tips untuk scan optimal</p>
                                </div>
                            </div>
                        </div>
                        <div class="p-4 sm:p-6">
                            <div class="space-y-3 sm:space-y-4">
                                <div class="flex items-start space-x-2 sm:space-x-3">
                                    <div
                                        class="w-5 h-5 sm:w-6 sm:h-6 bg-yellow-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                                        <span class="text-white text-xs font-bold">1</span>
                                    </div>
                                    <div>
                                        <p class="font-medium text-gray-900 text-xs sm:text-sm">Pencahayaan Cukup</p>
                                        <p class="text-xs text-gray-500 mt-0.5 sm:mt-1">Pastikan area memiliki cahaya
                                            yang terang</p>
                                    </div>
                                </div>

                                <div class="flex items-start space-x-2 sm:space-x-3">
                                    <div
                                        class="w-5 h-5 sm:w-6 sm:h-6 bg-yellow-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                                        <span class="text-white text-xs font-bold">2</span>
                                    </div>
                                    <div>
                                        <p class="font-medium text-gray-900 text-xs sm:text-sm">Posisi QR Code</p>
                                        <p class="text-xs text-gray-500 mt-0.5 sm:mt-1">Arahkan ke tengah frame scanner
                                        </p>
                                    </div>
                                </div>

                                <div class="flex items-start space-x-2 sm:space-x-3">
                                    <div
                                        class="w-5 h-5 sm:w-6 sm:h-6 bg-yellow-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                                        <span class="text-white text-xs font-bold">3</span>
                                    </div>
                                    <div>
                                        <p class="font-medium text-gray-900 text-xs sm:text-sm">Jarak Optimal</p>
                                        <p class="text-xs text-gray-500 mt-0.5 sm:mt-1">15-30 cm dari kamera</p>
                                    </div>
                                </div>

                                <div class="flex items-start space-x-2 sm:space-x-3">
                                    <div
                                        class="w-5 h-5 sm:w-6 sm:h-6 bg-yellow-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5">
                                        <span class="text-white text-xs font-bold">4</span>
                                    </div>
                                    <div>
                                        <p class="font-medium text-gray-900 text-xs sm:text-sm">Auto Processing</p>
                                        <p class="text-xs text-gray-500 mt-0.5 sm:mt-1">Presensi tersimpan otomatis</p>
                                    </div>
                                </div>
                            </div>

                            <div
                                class="mt-4 sm:mt-6 p-3 sm:p-4 bg-gradient-to-r from-green-50 to-green-100 rounded-xl border border-green-200">
                                <div class="flex items-center space-x-2">
                                    <svg class="w-4 h-4 sm:w-5 sm:h-5 text-green-600" fill="none"
                                        stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M13 10V3L4 14h7v7l9-11h-7z" />
                                    </svg>
                                    <span class="text-xs sm:text-sm font-bold text-green-800">Tips Pro:</span>
                                </div>
                                <p class="text-xs text-green-700 mt-1">Tahan perangkat stabil selama scanning untuk
                                    hasil terbaik</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            {{-- Form tersembunyi untuk mengirim hasil scan --}}
            <form action="{{ route('scan.verify') }}" method="POST" id="scan-form" class="hidden">
                @csrf
                <input type="hidden" name="event_code" id="event_code">
            </form>
        </div>
    </div>

    @push('scripts')
        <script src="https://unpkg.com/html5-qrcode" type="text/javascript"></script>
        <script>
            // Alpine.js helper functions for animations
            function fadeIn(delay = 0) {
                return {
                    init() {
                        this.$el.style.opacity = '0';
                        setTimeout(() => {
                            this.$el.style.opacity = '1';
                            this.$el.style.transition = 'opacity 0.5s ease-in-out';
                        }, delay);
                    }
                };
            }
            
            function slideIn(direction = 'up', delay = 0) {
                return {
                    init() {
                        const directions = {
                            up: 'translateY(20px)',
                            down: 'translateY(-20px)',
                            left: 'translateX(20px)',
                            right: 'translateX(-20px)'
                        };
                        
                        this.$el.style.opacity = '0';
                        this.$el.style.transform = directions[direction];
                        
                        setTimeout(() => {
                            this.$el.style.opacity = '1';
                            this.$el.style.transform = 'translate(0)';
                            this.$el.style.transition = 'opacity 0.5s ease-out, transform 0.5s ease-out';
                        }, delay);
                    }
                };
            }
            
            // Display browser information for debugging
            document.addEventListener('DOMContentLoaded', function() {
                const browserInfoElement = document.getElementById('browser-info');
                if (browserInfoElement) {
                    const browserInfo = `${navigator.userAgent.match(/chrome|firefox|safari|edge|opera/i)} - ${navigator.platform}`;
                    browserInfoElement.textContent = `Browser: ${browserInfo}`;
                }
            });
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const statusElement = document.getElementById('scan-status');
                const resultsElement = document.getElementById('qr-reader-results');
                let html5QrcodeScanner = null;

                function updateStatus(message, type = 'info') {
                    if (!statusElement) return;
                    
                    statusElement.textContent = message;

                    const statusContainer = statusElement.parentElement;
                    const indicator = statusContainer.querySelector('.w-2\.5, .w-3');

                    // Reset classes
                    indicator.className = 'w-2.5 h-2.5 sm:w-3 sm:h-3 rounded-full';

                    switch (type) {
                        case 'scanning':
                            indicator.classList.add('bg-blue-400', 'animate-pulse');
                            break;
                        case 'success':
                            indicator.classList.add('bg-green-400', 'animate-pulse');
                            break;
                        case 'error':
                            indicator.classList.add('bg-red-400', 'animate-pulse');
                            break;
                        default:
                            indicator.classList.add('bg-yellow-400', 'animate-pulse');
                    }
                }

                function onScanSuccess(decodedText, decodedResult) {
                    updateStatus('QR Code terdeteksi! Memproses...', 'success');

                    // Enhanced success feedback
                    resultsElement.innerHTML = `
                    <div class="text-center animate-fade-in">
                        <div class="p-4 sm:p-6 bg-gradient-to-br from-green-50 to-green-100 rounded-xl border-2 border-green-200 inline-block sm:w-full sm:max-w-md mx-auto">
                            <div class="flex items-center justify-center w-12 h-12 sm:w-16 sm:h-16 bg-green-500 rounded-full mx-auto mb-3 sm:mb-4 animate-bounce">
                                <svg class="w-6 h-6 sm:w-8 sm:h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                                </svg>
                            </div>
                            <h4 class="text-base sm:text-lg font-bold text-green-800 mb-1 sm:mb-2">QR Code Berhasil Dipindai!</h4>
                            <p class="text-xs sm:text-sm text-green-600">Sedang memproses presensi Anda...</p>
                            <div class="mt-3 sm:mt-4 flex items-center justify-center">
                                <div class="animate-spin rounded-full h-5 w-5 sm:h-6 sm:w-6 border-b-2 border-green-500"></div>
                            </div>
                        </div>
                    </div>
                `;

                    try {
                        // Fill hidden form
                        document.getElementById('event_code').value = decodedText;

                        // Submit form with delay for better UX
                        setTimeout(() => {
                            document.getElementById('scan-form').submit();
                        }, 1500);

                        // Stop scanner
                        if (html5QrcodeScanner) {
                            html5QrcodeScanner.clear().catch(error => {
                                console.log('Scanner cleared with error:', error);
                            });
                        }
                    } catch (error) {
                        console.error("Error during form submission:", error);
                        showErrorMessage("Terjadi kesalahan saat memproses QR code. Silakan coba lagi.");
                    }
                }

                function showErrorMessage(message) {
                    resultsElement.innerHTML = `
                    <div class="text-center animate-fade-in">
                        <div class="p-4 sm:p-6 bg-gradient-to-br from-red-50 to-red-100 rounded-xl border-2 border-red-200 inline-block sm:w-full sm:max-w-md mx-auto">
                            <div class="flex items-center justify-center w-12 h-12 sm:w-16 sm:h-16 bg-red-500 rounded-full mx-auto mb-3 sm:mb-4">
                                <svg class="w-6 h-6 sm:w-8 sm:h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                </svg>
                            </div>
                            <h4 class="text-base sm:text-lg font-bold text-red-800 mb-1 sm:mb-2">Terjadi Kesalahan</h4>
                            <p class="text-xs sm:text-sm text-red-600">${message}</p>
                            <button class="mt-3 px-4 py-2 bg-red-600 text-white rounded-lg text-sm font-medium" onclick="window.location.reload()">
                                Coba Lagi
                            </button>
                        </div>
                    </div>`;
                }

                function onScanFailure(error) {
                    // Only log serious errors, ignore normal "no QR found" messages
                    if (error !== "No QR code found.") {
                        console.error("Scan error:", error);
                        
                        // Check for specific camera errors
                        if (error.includes('Camera access') || error.includes('Permission')) {
                            updateStatus('Error Akses Kamera', 'error');
                            showErrorMessage("Kamera tidak dapat diakses. Pastikan Anda telah memberikan izin kamera di browser Anda dan tidak ada aplikasi lain yang menggunakan kamera.");
                            return;
                        }
                    }
                    
                    // For normal operation, rotate through scanning messages
                    const scanMessages = [
                        'Mencari QR Code...',
                        'Siap untuk scan...',
                        'Posisikan QR Code...',
                        'Scanning aktif...'
                    ];
                    const randomMessage = scanMessages[Math.floor(Math.random() * scanMessages.length)];
                    updateStatus(randomMessage, 'scanning');
                }

                // Fungsi untuk mendapatkan ukuran QR box yang responsif berdasarkan lebar layar
                function getQRboxSize() {
                    const width = window.innerWidth;
                    const qrContainer = document.getElementById('qr-reader');
                    const containerWidth = qrContainer ? qrContainer.offsetWidth : null;
                    
                    // Dynamic calculation based on container size if available
                    if (containerWidth) {
                        const boxSize = Math.min(containerWidth - 40, 320); // Max size capped at 320px
                        return {
                            width: boxSize,
                            height: boxSize
                        };
                    }
                    
                    // Fallback to screen-width based calculation
                    if (width < 480) {
                        return {
                            width: 240,
                            height: 240
                        };
                    } else if (width < 768) {
                        return {
                            width: 280,
                            height: 280
                        };
                    } else {
                        return {
                            width: 320,
                            height: 320
                        };
                    }
                }

                try {
                    // Using a simple configuration for more reliable camera access
                    html5QrcodeScanner = new Html5QrcodeScanner(
                        "qr-reader", 
                        { 
                            fps: 10, 
                            qrbox: 250,
                            rememberLastUsedCamera: true,
                            supportedScanTypes: [0] // 0 = QR CODE SCAN ONLY
                        }, 
                        /* verbose= */ true
                    );

                    updateStatus('Mengaktifkan kamera...', 'scanning');

                    // Basic render without promises to avoid complications
                    html5QrcodeScanner.render(onScanSuccess, onScanFailure);
                    
                    // Add basic styling after render
                    setTimeout(() => {
                        const scanRegion = document.querySelector("#qr-reader__scan_region");
                        if (scanRegion) {
                            scanRegion.style.borderRadius = '0.75rem';
                        }
                        
                        // Force camera selection if needed
                        const cameraSelection = document.getElementById('qr-reader__camera_selection');
                        if (cameraSelection && cameraSelection.options && cameraSelection.options.length > 1) {
                            cameraSelection.selectedIndex = 1; // Try to select back camera
                            cameraSelection.dispatchEvent(new Event('change'));
                        }
                        
                        updateStatus('Siap untuk scan!', 'scanning');
                    }, 1000);
                    // Add a simple camera access troubleshooting button
                    setTimeout(() => {
                        const resultsArea = document.getElementById('qr-reader-results');
                        if (resultsArea && !document.querySelector('#camera-access-help')) {
                            const helpButton = document.createElement('button');
                            helpButton.id = 'camera-access-help';
                            helpButton.className = 'mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg text-sm font-medium';
                            helpButton.textContent = 'Bantuan Akses Kamera';
                            helpButton.onclick = function() {
                                showErrorMessage("Jika kamera tidak muncul: 1) Berikan izin kamera di browser Anda, 2) Pastikan kamera tidak digunakan aplikasi lain, 3) Coba refresh halaman, 4) Coba gunakan browser lain seperti Chrome.");
                            };
                            resultsArea.appendChild(helpButton);
                        }
                    }, 3000);
                } catch (error) {
                    console.error("Fatal error initializing QR scanner:", error);
                    updateStatus('Error: Scanner tidak dapat diinisialisasi', 'error');
                    
                    // Check if camera is available at all
                    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
                        showErrorMessage("Browser Anda tidak mendukung akses kamera. Gunakan browser modern seperti Chrome atau Firefox terbaru.");
                    } else {
                        // Try to access camera manually to trigger permission prompt
                        navigator.mediaDevices.getUserMedia({ video: true })
                            .then(function(stream) {
                                // Camera is available but scanner failed for other reasons
                                stream.getTracks().forEach(track => track.stop());
                                showErrorMessage("QR Scanner tidak dapat diinisialisasi meskipun kamera tersedia. Coba refresh halaman atau gunakan perangkat lain.");
                            })
                            .catch(function(err) {
                                showErrorMessage("Akses kamera ditolak atau tidak tersedia. Berikan izin kamera di pengaturan browser Anda dan refresh halaman ini.");
                            });
                    }
                }

                // Add animation observers
                try {
                    const observerOptions = {
                        threshold: 0.1,
                        rootMargin: '0px 0px -50px 0px'
                    };

                    const observer = new IntersectionObserver((entries) => {
                        entries.forEach(entry => {
                            if (entry.isIntersecting) {
                                entry.target.style.opacity = '1';
                                entry.target.style.transform = 'translateY(0)';
                            }
                        });
                    }, observerOptions);

                    const animatedElements = document.querySelectorAll('.animate-slide-up');
                    animatedElements.forEach(el => {
                        el.style.opacity = '0';
                        el.style.transform = 'translateY(20px)';
                        el.style.transition = 'all 0.6s ease-out';
                        observer.observe(el);
                    });
                } catch (error) {
                    console.error("Animation observer error:", error);
                    // Non-critical error, don't show to user
                }
                
                // Camera testing functionality
                const testCameraBtn = document.getElementById('test-camera-btn');
                const reloadScannerBtn = document.getElementById('reload-scanner-btn');
                const cameraTestArea = document.getElementById('camera-test-area');
                const cameraTestVideo = document.getElementById('camera-test-video');
                let cameraStream = null;
                
                if (testCameraBtn) {
                    testCameraBtn.addEventListener('click', function() {
                        cameraTestArea.classList.remove('hidden');
                        
                        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                            navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } })
                                .then(function(stream) {
                                    cameraStream = stream;
                                    cameraTestVideo.srcObject = stream;
                                    showErrorMessage("Kamera berfungsi! Jika scanner tidak bekerja, cobalah klik 'Reload Scanner' atau refresh halaman.");
                                })
                                .catch(function(err) {
                                    showErrorMessage("Gagal mengakses kamera: " + err.message + ". Pastikan browser memiliki izin untuk menggunakan kamera.");
                                });
                        } else {
                            showErrorMessage("Browser Anda tidak mendukung akses kamera. Gunakan browser modern seperti Chrome atau Firefox terbaru.");
                        }
                    });
                }
                
                if (reloadScannerBtn) {
                    reloadScannerBtn.addEventListener('click', function() {
                        // Stop any test camera stream
                        if (cameraStream) {
                            cameraStream.getTracks().forEach(track => track.stop());
                            cameraStream = null;
                        }
                        
                        // Hide test area
                        cameraTestArea.classList.add('hidden');
                        
                        // Clear any existing scanner
                        if (html5QrcodeScanner) {
                            try {
                                html5QrcodeScanner.clear();
                            } catch (error) {
                                console.error("Error clearing scanner:", error);
                            }
                        }
                        
                        // Re-initialize scanner with basic settings
                        setTimeout(() => {
                            try {
                                html5QrcodeScanner = new Html5QrcodeScanner(
                                    "qr-reader", 
                                    { fps: 10, qrbox: 250 }, 
                                    true
                                );
                                html5QrcodeScanner.render(onScanSuccess, onScanFailure);
                                updateStatus('Mengaktifkan scanner baru...', 'scanning');
                            } catch (error) {
                                console.error("Error reinitializing scanner:", error);
                                showErrorMessage("Gagal menginisialisasi ulang scanner: " + error.message);
                            }
                        }, 500);
                    });
                }
            });
        </script>
    @endpush
</x-app-layout>
